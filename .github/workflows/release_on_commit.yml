name: Create Release and Push Image on Commit

on:
  push:
    branches:
      - main

jobs:
  create-release:
    if: startsWith(github.event.head_commit.message, 'Release version=')
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Extract Version from Commit Message
        id: extract_version
        run: |
          echo "Commit message: ${{ github.event.head_commit.message }}"
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP '(?<=Release version=)\d+\.\d+\.\d+')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.extract_version.outputs.version }}"
          release_name: "${{ steps.extract_version.outputs.version }}"
          body: "This release was automatically generated from commit ${{ github.event.head_commit.id }}."
          draft: false
          prerelease: false

  build:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/jemp_app:${{ needs.create-release.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/jemp_app:latest
          platforms: linux/arm64
          #platforms: linux/amd64,linux/arm64
